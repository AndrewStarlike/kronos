<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),),
        '_profiler_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/import',    ),  ),  4 =>   array (  ),),
        '_profiler_export' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.txt',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler/export',    ),  ),  4 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),),
        'kronos_index' => array (  0 =>   array (    0 => 'inWeek',    1 => 'inYear',  ),  1 =>   array (    '_controller' => 'Kronos\\UserReportingBundle\\Controller\\UserController::indexAction',    'inWeek' => NULL,    'inYear' => NULL,  ),  2 =>   array (    'inWeek' => '\\d+',    'inYear' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'inYear',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'inWeek',    ),    2 =>     array (      0 => 'text',      1 => '/user/index',    ),  ),  4 =>   array (  ),),
        'kronos_create_line' => array (  0 =>   array (    0 => 'inWeek',    1 => 'inYear',    2 => 'type',  ),  1 =>   array (    '_controller' => 'Kronos\\UserReportingBundle\\Controller\\UserController::createLineAction',    'inWeek' => NULL,    'inYear' => NULL,    'type' => NULL,  ),  2 =>   array (    'inWeek' => '\\d+',    'inYear' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'inYear',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'inWeek',    ),    3 =>     array (      0 => 'text',      1 => '/user/create-line',    ),  ),  4 =>   array (  ),),
        'kronos_edit_line' => array (  0 =>   array (    0 => 'lineId',    1 => 'inWeek',    2 => 'inYear',  ),  1 =>   array (    '_controller' => 'Kronos\\UserReportingBundle\\Controller\\UserController::editLineAction',    'inWeek' => NULL,    'inYear' => NULL,  ),  2 =>   array (    'lineId' => '\\d+',    'inWeek' => '\\d+',    'inYear' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'inYear',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'inWeek',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lineId',    ),    3 =>     array (      0 => 'text',      1 => '/user/edit-line',    ),  ),  4 =>   array (  ),),
        'kronos_delete_line_datas' => array (  0 =>   array (    0 => 'lineId',    1 => 'inWeek',    2 => 'inYear',  ),  1 =>   array (    '_controller' => 'Kronos\\UserReportingBundle\\Controller\\UserController::deleteLineDatasAction',    'inWeek' => NULL,    'inYear' => NULL,  ),  2 =>   array (    'lineId' => '\\d+',    'inWeek' => '\\d+',    'inYear' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'inYear',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'inWeek',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lineId',    ),    3 =>     array (      0 => 'text',      1 => '/user/delete-line-datas',    ),  ),  4 =>   array (  ),),
        'kronos_get_table' => array (  0 =>   array (    0 => 'lineTypeId',    1 => 'inWeek',    2 => 'inYear',  ),  1 =>   array (    '_controller' => 'Kronos\\UserReportingBundle\\Controller\\UserController::getTableAction',    'inWeek' => NULL,    'inYear' => NULL,  ),  2 =>   array (    'lineTypeId' => '\\d+',    'inWeek' => '\\d+',    'inYear' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'inYear',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'inWeek',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lineTypeId',    ),    3 =>     array (      0 => 'text',      1 => '/user/get-table',    ),  ),  4 =>   array (  ),),
        'kronos_core_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),),
        'sonata_admin_redirect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::redirectAction',    'route' => 'sonata_admin_dashboard',    'permanent' => 'true',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),),
        'sonata_admin_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CoreController::dashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dashboard',    ),  ),  4 =>   array (  ),),
        'sonata_admin_retrieve_form_element' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:retrieveFormFieldElementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/get-form-field-element',    ),  ),  4 =>   array (  ),),
        'sonata_admin_append_form_element' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:appendFormFieldElementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/append-form-field-element',    ),  ),  4 =>   array (  ),),
        'sonata_admin_short_object_information' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:getShortObjectDescriptionAction',    '_format' => 'html',  ),  2 =>   array (    '_format' => 'html|json',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'html|json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/admin/core/get-short-object-description',    ),  ),  4 =>   array (  ),),
        'sonata_admin_set_object_field_value' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sonata.admin.controller.admin:setObjectFieldValueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/core/set-object-field-value',    ),  ),  4 =>   array (  ),),
        'sonata_admin_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\AdminBundle\\Controller\\CoreController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/search',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_activity_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ActivityAdminController::listAction',    '_sonata_admin' => 'kronos_core.admin.activity',    '_sonata_name' => 'admin_kronos_core_activity_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/activity/list',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_activity_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ActivityAdminController::createAction',    '_sonata_admin' => 'kronos_core.admin.activity',    '_sonata_name' => 'admin_kronos_core_activity_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/activity/create',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_activity_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ActivityAdminController::batchAction',    '_sonata_admin' => 'kronos_core.admin.activity',    '_sonata_name' => 'admin_kronos_core_activity_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/activity/batch',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_activity_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ActivityAdminController::editAction',    '_sonata_admin' => 'kronos_core.admin.activity',    '_sonata_name' => 'admin_kronos_core_activity_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/activity',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_activity_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ActivityAdminController::deleteAction',    '_sonata_admin' => 'kronos_core.admin.activity',    '_sonata_name' => 'admin_kronos_core_activity_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/activity',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_activity_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ActivityAdminController::showAction',    '_sonata_admin' => 'kronos_core.admin.activity',    '_sonata_name' => 'admin_kronos_core_activity_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/activity',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_activity_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ActivityAdminController::exportAction',    '_sonata_admin' => 'kronos_core.admin.activity',    '_sonata_name' => 'admin_kronos_core_activity_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/activity/export',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_linetype_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\LineTypeAdminController::listAction',    '_sonata_admin' => 'kronos_core.admin.line_type',    '_sonata_name' => 'admin_kronos_core_linetype_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/linetype/list',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_linetype_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\LineTypeAdminController::createAction',    '_sonata_admin' => 'kronos_core.admin.line_type',    '_sonata_name' => 'admin_kronos_core_linetype_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/linetype/create',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_linetype_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\LineTypeAdminController::batchAction',    '_sonata_admin' => 'kronos_core.admin.line_type',    '_sonata_name' => 'admin_kronos_core_linetype_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/linetype/batch',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_linetype_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\LineTypeAdminController::editAction',    '_sonata_admin' => 'kronos_core.admin.line_type',    '_sonata_name' => 'admin_kronos_core_linetype_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/linetype',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_linetype_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\LineTypeAdminController::deleteAction',    '_sonata_admin' => 'kronos_core.admin.line_type',    '_sonata_name' => 'admin_kronos_core_linetype_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/linetype',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_linetype_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\LineTypeAdminController::showAction',    '_sonata_admin' => 'kronos_core.admin.line_type',    '_sonata_name' => 'admin_kronos_core_linetype_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/linetype',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_linetype_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\LineTypeAdminController::exportAction',    '_sonata_admin' => 'kronos_core.admin.line_type',    '_sonata_name' => 'admin_kronos_core_linetype_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/linetype/export',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_project_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ProjectAdminController::listAction',    '_sonata_admin' => 'kronos_core.admin.project',    '_sonata_name' => 'admin_kronos_core_project_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/project/list',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_project_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ProjectAdminController::createAction',    '_sonata_admin' => 'kronos_core.admin.project',    '_sonata_name' => 'admin_kronos_core_project_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/project/create',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_project_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ProjectAdminController::batchAction',    '_sonata_admin' => 'kronos_core.admin.project',    '_sonata_name' => 'admin_kronos_core_project_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/project/batch',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_project_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ProjectAdminController::editAction',    '_sonata_admin' => 'kronos_core.admin.project',    '_sonata_name' => 'admin_kronos_core_project_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/project',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_project_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ProjectAdminController::deleteAction',    '_sonata_admin' => 'kronos_core.admin.project',    '_sonata_name' => 'admin_kronos_core_project_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/project',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_project_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ProjectAdminController::showAction',    '_sonata_admin' => 'kronos_core.admin.project',    '_sonata_name' => 'admin_kronos_core_project_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/project',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_project_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\ProjectAdminController::exportAction',    '_sonata_admin' => 'kronos_core.admin.project',    '_sonata_name' => 'admin_kronos_core_project_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/project/export',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_tasktype_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TaskTypeAdminController::listAction',    '_sonata_admin' => 'kronos_core.admin.task_type',    '_sonata_name' => 'admin_kronos_core_tasktype_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/tasktype/list',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_tasktype_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TaskTypeAdminController::createAction',    '_sonata_admin' => 'kronos_core.admin.task_type',    '_sonata_name' => 'admin_kronos_core_tasktype_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/tasktype/create',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_tasktype_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TaskTypeAdminController::batchAction',    '_sonata_admin' => 'kronos_core.admin.task_type',    '_sonata_name' => 'admin_kronos_core_tasktype_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/tasktype/batch',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_tasktype_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TaskTypeAdminController::editAction',    '_sonata_admin' => 'kronos_core.admin.task_type',    '_sonata_name' => 'admin_kronos_core_tasktype_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/tasktype',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_tasktype_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TaskTypeAdminController::deleteAction',    '_sonata_admin' => 'kronos_core.admin.task_type',    '_sonata_name' => 'admin_kronos_core_tasktype_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/tasktype',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_tasktype_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TaskTypeAdminController::showAction',    '_sonata_admin' => 'kronos_core.admin.task_type',    '_sonata_name' => 'admin_kronos_core_tasktype_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/tasktype',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_tasktype_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TaskTypeAdminController::exportAction',    '_sonata_admin' => 'kronos_core.admin.task_type',    '_sonata_name' => 'admin_kronos_core_tasktype_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/tasktype/export',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_team_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TeamAdminController::listAction',    '_sonata_admin' => 'kronos_core.admin.team',    '_sonata_name' => 'admin_kronos_core_team_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/team/list',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_team_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TeamAdminController::createAction',    '_sonata_admin' => 'kronos_core.admin.team',    '_sonata_name' => 'admin_kronos_core_team_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/team/create',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_team_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TeamAdminController::batchAction',    '_sonata_admin' => 'kronos_core.admin.team',    '_sonata_name' => 'admin_kronos_core_team_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/team/batch',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_team_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TeamAdminController::editAction',    '_sonata_admin' => 'kronos_core.admin.team',    '_sonata_name' => 'admin_kronos_core_team_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/team',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_team_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TeamAdminController::deleteAction',    '_sonata_admin' => 'kronos_core.admin.team',    '_sonata_name' => 'admin_kronos_core_team_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/team',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_team_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TeamAdminController::showAction',    '_sonata_admin' => 'kronos_core.admin.team',    '_sonata_name' => 'admin_kronos_core_team_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/core/team',    ),  ),  4 =>   array (  ),),
        'admin_kronos_core_team_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\CoreBundle\\Controller\\TeamAdminController::exportAction',    '_sonata_admin' => 'kronos_core.admin.team',    '_sonata_name' => 'admin_kronos_core_team_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/core/team/export',    ),  ),  4 =>   array (  ),),
        'admin_kronos_user_user_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\UserBundle\\Controller\\UserAdminController::listAction',    '_sonata_admin' => 'kronos_user.admin.user',    '_sonata_name' => 'admin_kronos_user_user_list',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/user/user/list',    ),  ),  4 =>   array (  ),),
        'admin_kronos_user_user_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\UserBundle\\Controller\\UserAdminController::createAction',    '_sonata_admin' => 'kronos_user.admin.user',    '_sonata_name' => 'admin_kronos_user_user_create',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/user/user/create',    ),  ),  4 =>   array (  ),),
        'admin_kronos_user_user_batch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\UserBundle\\Controller\\UserAdminController::batchAction',    '_sonata_admin' => 'kronos_user.admin.user',    '_sonata_name' => 'admin_kronos_user_user_batch',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/user/user/batch',    ),  ),  4 =>   array (  ),),
        'admin_kronos_user_user_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\UserBundle\\Controller\\UserAdminController::editAction',    '_sonata_admin' => 'kronos_user.admin.user',    '_sonata_name' => 'admin_kronos_user_user_edit',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/user/user',    ),  ),  4 =>   array (  ),),
        'admin_kronos_user_user_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\UserBundle\\Controller\\UserAdminController::deleteAction',    '_sonata_admin' => 'kronos_user.admin.user',    '_sonata_name' => 'admin_kronos_user_user_delete',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/user/user',    ),  ),  4 =>   array (  ),),
        'admin_kronos_user_user_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Kronos\\UserBundle\\Controller\\UserAdminController::showAction',    '_sonata_admin' => 'kronos_user.admin.user',    '_sonata_name' => 'admin_kronos_user_user_show',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/kronos/user/user',    ),  ),  4 =>   array (  ),),
        'admin_kronos_user_user_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Kronos\\UserBundle\\Controller\\UserAdminController::exportAction',    '_sonata_admin' => 'kronos_user.admin.user',    '_sonata_name' => 'admin_kronos_user_user_export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/kronos/user/user/export',    ),  ),  4 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens);
    }
}
